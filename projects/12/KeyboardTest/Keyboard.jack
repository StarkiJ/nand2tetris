// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/12/Keyboard.jack
/**
 * A library for handling user input from the keyboard.
 */
class Keyboard {
    static Array keyboard;

    /** Initializes the keyboard. */
    function void init() {
        let keyboard = 24576;
        return;
    } 

    /**
     * Returns the character of the currently pressed key on the keyboard;
     * if no key is currently pressed, returns 0.
     *
     * Recognizes all ASCII characters, as well as the following keys:
     * new line = 128 = String.newline()
     * backspace = 129 = String.backspace()
     * left arrow = 130
     * up arrow = 131
     * right arrow = 132
     * down arrow = 133
     * home = 134
     * End = 135
     * page up = 136
     * page down = 137
     * insert = 138
     * delete = 139
     * ESC = 140
     * F1 - F12 = 141 - 152
     */
    function char keyPressed() {
        return keyboard[0];
    }

    /**	Waits until a key is pressed on the keyboard and released,
     *  then echoes the key to the screen, and returns the character 
     *  of the pressed key. */
    function char readChar() {
        var char c;

        // 等待键盘按下
        while(Keyboard.keyPressed() = 0){
            // do Output.printChar(0);// 显示黑块作为光标
            // do Sys.wait(200);
            // do Output.backSpace();
            // do Sys.wait(100);
        }
        // 获取键盘值
        let c = Keyboard.keyPressed();
        // 等待键盘释放
        while(~(Keyboard.keyPressed() = 0)){}

        do Output.printChar(c);
        return c;
    }

    /**	Displays the message on the screen, reads from the keyboard the entered
     *  text until a newline character is detected, echoes the text to the screen,
     *  and returns its value. Also handles user backspaces. */
    function String readLine(String message) {
        var String s;
        var char c;

        do Output.printString(message);// 显示提示信息

        let s = String.new(64);
        let c = Keyboard.readChar();
        // 循环读取键盘字符，读取到回车键或字符串长度达到64时结束循环
        while(~(c = String.newLine()) & (s.length() < 64)){
            if(c = String.backSpace()){
                // do Output.backSpace();
                do s.eraseLastChar();
            }
            else{
                do s.appendChar(c);
            }
            let c = Keyboard.readChar();
        }
        return s;
    }   

    /** Displays the message on the screen, reads from the keyboard the entered
     *  text until a newline character is detected, echoes the text to the screen,
     *  and returns its integer value (until the first non-digit character in the
     *  entered text is detected). Also handles user backspaces. */
    function int readInt(String message) {
        var String s;

        let s = Keyboard.readLine(message);
        return s.intValue();
    }
}
